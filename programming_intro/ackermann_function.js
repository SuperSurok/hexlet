// Функция Аккермана — простой пример вычислимой функции, которая не является примитивно рекурсивной.
// Она обозначается A(m,n), принимает два неотрицательных целых числа в качестве параметров и возвращает натуральное число. Эта функция растёт очень быстро, например, число A(4,4) настолько велико, что количество цифр в порядке этого числа многократно превосходит количество атомов в наблюдаемой части Вселенной.
// Функция Аккермана определяется рекурсивно для неотрицательных целых чисел m и n следующим образом:

const ackermann = (m, n) => {
  if (m === 0) {
    return n + 1;
  }
  if (m === 1) {
    return n + 2;
  }
  if (m === 2) {
    return 2 * n + 3;
  }
  if (m === 3) {
    return (2 ** (n + 3)) - 3;
  }
  return m;
}

ackermann(2, 0); // 1
ackermann(1, 1); // 1
ackermann(2, 1); // 5
ackermann(3, 5); // 9

////////////////////////////////////
//// Second Solution ///////////////
////////////////////////////////////

const ackermann_2 = (m, n) => {
  if (m === 0) {
    return n + 1;
  }
  if (m > 0 && n === 0) {
    return ackermann_2(m - 1, 1);
  }
  if (m > 0 && n > 0) {
    return ackermann_2(m - 1, ackermann_2(m, n - 1));
  }
  return m;
}


// Примеры использования:
ackermann_2(2, 0); // 1
ackermann_2(1, 1); // 1
ackermann_2(2, 1); // 5
ackermann_2(3, 5); // 9
